#include<stdlib.h>
#include<stdio.h>
#include<pthread.h>
#include<unistd.h>
void * writer(void *arg);
void * reader(void *arg);
pthread_mutex_t wr ,mutex;
int a=10,readcount=0;
int main()
{
	pthread_t r[10],w[10];
	long int i,j;
	int nor,now;
	pthread_mutex_init(&wr,NULL);
	pthread_mutex_init(&mutex,NULL);
	printf("\n\tEnter number of readers and writers :");
	scanf("%d%d",&nor,&now);
	for(i=0;i<nor;i++)
	{
		pthread_create(&r[i],NULL,reader,(void*)i);
	}
	for(j=0;j<now;j++)
	{
		pthread_create(&w[i],NULL,writer,(void*)j);
	}
	for(i=0;i<nor;i++)
	{
		pthread_join(r[i],NULL);
	}
	for(j=0;j<now;j++)
	{
		pthread_join(w[j],NULL);
	}
	return 0;
}
void * writer(void *arg)
{
	long int num;
	num = (long int)arg;
	pthread_mutex_lock(&wr);
	printf("\n\twriter %ld in critical section ",num);
	printf("\n\twritter %ld have written data as %d",num,++a);
	sleep(1);
	pthread_mutex_unlock(&wr);
	printf("\n\twriter %ld left critical section ",num);
}
void * reader(void *arg)
{
	long int num;
	num = (long int)arg;
	pthread_mutex_lock(&mutex);
	readcount++;
	pthread_mutex_unlock(&mutex);
	if(readcount==1)
	{
		pthread_mutex_lock(&wr);	
	}
	printf("\n\treader %ld in critical section ",num);
	printf("\n\treader %ld have read data as %d",num,a);
	sleep(1);
	pthread_mutex_lock(&mutex);
	readcount--;
	pthread_mutex_unlock(&mutex);
	if(readcount==0)
	{
		pthread_mutex_unlock(&wr);	
	}
	printf("\n\treader %ld left critical section ",num);
}
